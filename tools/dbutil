#!/usr/bin/env coffee

umsg = """
Usage: $0 -s <schema> -d <dbname> <command> [options]

    Add and edit objects in the Syncro DB, with history

Commands:

    adduser                             Add a User to the DB
    users                               Show a list of the users in the DB	
	perm -u <userid> <type> <query>     Add 'full' permissions for <userid> to the first object found by <query>
	ls <type>						    List objects of the specified type
	add <type> <props> [options]		Add an object to the DB of the specified <type>
	
Properties/Queries:

    You may specify key=value pairs for the <query> or <props> arguments.

  Examples:

  	add Person name="Joe Smith" gender=Male         (add a Person object, with name & gender set)
  	perm -u myuser Person name="Alice Cooper"       (grant permissions to 'myuser' to access Person with name "Alice Cooper")

"""

optimist = require 'optimist'

argv = optimist
	.usage(umsg)
	.demand('d')
	.alias('d', 'dbname')
	.describe('d', 'Name of MongoDB database')
	.demand('s')
	.alias('s', 'schema')
	.describe('s', 'Path to schema file to use')
	.alias('u', 'user')
	.describe('u', 'User ID and rights')
	.alias('h', 'help')
	.describe('h', 'Show this help message')
	.argv

usage() if argv.h

usage = (msg) ->
	console.log optimist.help()
	console.log msg + '\n'
	process.exit()

usage 'You must specify a command' unless argv._.length

syncro = require __dirname + '/../src/syncro'
path = require 'path'
sprintf = (require 'sprintf').sprintf
sw = require 'shellwords'

Log = require('coloured-log')

logger = new Log(Log.INFO)

# Include the database schema
dbschema = require path.resolve argv.s

syncro.db.connect 'mongodb://localhost/' + argv.d

# Generate the Mongoose schema, models, and socket.io API
syncro.dbinit dbschema, logger

cmd = argv._[0]
			
			
switch cmd
	# List the User objects in the DB
	when 'users'
		syncro.listUsers (err, users) ->
			console.log ""

			if users.length
				console.log "    #{u._id}   #{u.userid}" for u in users 
			else
				console.log "    No users"

			console.log ""
			process.exit()
	# Add a new User to the DB, specifying the 'userid' and 'password'
	when 'adduser'
		usage "You must specify a userid and password with 'adduser'" if argv._.length < 3
		props =
			userid: argv._[1]
			password: argv._[2]

		syncro.addUser props, (err, user) ->
			if err and err.code is 11000
				console.log "Error: User already exists"
			else
				console.log user

			process.exit()
	# List the objects in the DB
	when 'ls'
		type = argv._[1]
		usage "You must specify the model name"	 unless type

		syncro.listObjs type, (err, objs) ->
			if err?
				logger.error err
				process.exit()

			console.log ""

			if objs.length
				console.log obj for obj in objs
			else
				console.log "    No #{type} objects"

			console.log ""
			process.exit()

	# Add an object to the DB, and optionally grant permissions
	when 'add'
		type = argv._[1]
		usage "You must specify the model name"	 unless type

		usage "Use the 'adduser' command for adding users" if type is 'User'

		props = {}
		for pair in argv._[2...]
			[key, val] = pair.split '='
			props[key] = val

		syncro.addObj argv.u, type, props, (err) ->
			process.exit()

	# Usage: 
	when 'perm'
		usage "You must specify a user with -u for the 'perm' command" unless argv.u

		type = argv._[1]
		usage "You must specify the model name"	 unless type

		# FIXME: refactor this to a function.  duped above.
		props = {}
		for pair in argv._[2...]
			[key, val] = pair.split '='
			props[key] = val

		syncro.addPerm argv.u, type, props, (err) ->
			process.exit()

	else
		usage "Unrecognized command '#{cmd}'"

